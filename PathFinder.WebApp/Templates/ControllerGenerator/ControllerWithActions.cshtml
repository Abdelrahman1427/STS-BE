@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using PathFinder.WebApp.Models;

@{
    string modelName = (Model.ClassName.EndsWith("Controller")? Model.ClassName.Substring(0,Model.ClassName.Length-10): Model.ClassName);
    string serviceName = "I" + modelName + "Service";
    string serviceNameCamelCase = Char.ToLowerInvariant(serviceName[0]) + serviceName.Substring(1);
}
namespace @Model.NamespaceName
{
    [Area("AreaName")]
    public class @Model.ClassName : Controller
    {
        private @serviceName _companyService;
        public Constructor(@serviceName @serviceNameCamelCase)
        {
            _companyService = companyService;
        }

        [HttpPost]
        public async Task<JsonResult> LoadDataTable(DataTableModel data)
        {
            var filter = new FilterControllerDTO()
            {
                isOrderAsc = data.Order[0].Dir == "asc" ? true : false,
                orderProp = data.Columns[data.Order[0].Column].Name,
                page = data.PageNo,
                pageSize = data.Length,
                IsActive = string.IsNullOrEmpty(data.Columns[7].Search.Value) ? null: Convert.ToBoolean(data.Columns[7].Search.Value),
                Search = data.Columns[0].Search.Value
            };
            var page = await _companyService.FilterCompanies(filter);
            return Json(data.GetDataTableModel(page));
        }
        // GET: @modelName
        public ActionResult Index()
        {
            return View();
        }

        // GET: @modelName/Details/5
        public ActionResult Details(int id)
        {
            return View();
        }

        // GET: @modelName/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: @modelName/Create
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(IFormCollection collection)
        {
            try
            {
                // TODO: Add insert logic here

                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View();
            }
        }

        // GET: @modelName/Edit/5
        public ActionResult Edit(int id)
        {
            return View();
        }

        // POST: @modelName/Edit/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit(int id, IFormCollection collection)
        {
            try
            {
                // TODO: Add update logic here

                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View();
            }
        }

        // GET: @modelName/Delete/5
        public ActionResult Delete(int id)
        {
            return View();
        }

        // POST: @modelName/Delete/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Delete(int id, IFormCollection collection)
        {
            try
            {
                // TODO: Add delete logic here

                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View();
            }
        }
    }
}